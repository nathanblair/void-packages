# Template file for 'nodejs-static'
pkgname=nodejs-static
version=14.10.0
revision=1
wrksrc="node-v${version}"
# Need these for host v8 for torque, see https://github.com/nodejs/node/pull/21079
hostmakedepends="python3"
makedepends=""
short_desc="Evented I/O for V8 javascript"
maintainer="Nathan Blair <engineer.nblair@gmail.com>"
license="MIT"
homepage="https://nodejs.org/"
distfiles="${homepage}/dist/v${version}/node-v${version}.tar.gz"
checksum=7e0d7a1aa23697415e3588a1ca4f1c47496e6c88b9cf37c66be90353d3e4ac3e
python_version=3 #unverified

replaces="iojs>=0"
conflicts="nodejs-lts nodejs-lts-10 nodejs-lts-12 nodejs-static"
provides="nodejs-runtime-0_1"

if [ "$XBPS_WORDSIZE" -ne "$XBPS_TARGET_WORDSIZE" ]; then
	nocross="host and target must have the same pointer size"
fi

case "$XBPS_TARGET_MACHINE" in
	ppc64*) ;;
	ppc*) broken="Node does not support 32-bit ppc" ;;
esac

if [ "$XBPS_TARGET_NO_ATOMIC8" ]; then
	makedepends+=" libatomic-devel"
fi
if [ "$XBPS_NO_ATOMIC8" ]; then
	hostmakedepends+=" libatomic-devel"
fi

do_configure() {
	local _args

	export LD="$CXX"
	if [ "$CROSS_BUILD" ]; then
		case "$XBPS_TARGET_MACHINE" in
			arm*) _args="--dest-cpu=arm" ;;
			aarch64*) _args="--dest-cpu=arm64" ;;
			ppc64*) _args="--dest-cpu=ppc64" ;;
			ppc*) _args="--dest-cpu=ppc" ;;
			mipsel*) _args="--dest-cpu=mipsel" ;;
			mips*) _args="--dest-cpu=mips" ;;
			i686*) _args="--dest-cpu=x86" ;;
			x86_64*) _args="--dest-cpu=x86_64" ;;
			*) msg_error "$pkgver: cannot be cross compiled for ${XBPS_TARGET_MACHINE}.\n" ;;
		esac
		# this is necessary - for example, normally compiling from ppc64le
		# to ppc64 or from glibc to musl is considered non-cross-compiling
		# by the build system, because it's technically the same architecture
		#
		# that results in the toolset built for target only, and attempting
		# to execute it within the build system fails
		_args+=" --cross-compiling"
	fi
	# their pregenerated asm is for ELFv1...
	case "$XBPS_TARGET_MACHINE" in
		ppc64|ppc64-musl) _args+=" --openssl-no-asm" ;;
	esac
	./configure --prefix=/usr --fully-static ${_args}
}

do_build() {
	if [ "$CROSS_BUILD" ]; then
		make LD="$CXX" LDFLAGS+=-ldl ${makejobs} PORTABLE=1 V=1
	else
		make LD="$CXX" LDFLAGS+=-ldl ${makejobs} V=1
	fi
}

do_install() {
	make LD="$CXX" LDFLAGS+=-ldl DESTDIR="$DESTDIR" install
  rm $DESTDIR/usr/include/node/openssl -rf
	vlicense LICENSE
}

nodejs-static-devel_package() {
	short_desc+=" (development files)"
	conflicts="nodejs-devel nodejs-lts-devel nodejs-lts-10-devel nodejs-lts-12-devel"
	pkg_install() {
		vmove usr/include
	}
}
